# 서울시 1인 가구 맞춤형 주거지 추천 서비스 - 도시낭인

### 1. 프로젝트 소개

#### 1.1. 개발배경 및 필요성

서울시에서 **1인 가구**의 비중은 꾸준히 증가하여 현재 전체 가구의 약 40%에 달하고 있으며[^1], 특히 **청년층을 중심으로 한 단독 가구의 급증**이 두드러지고 있다
수도권에 거주하는 청년 인구 중 절반 이상(55.2%)이 1인 가구를 구성하고 있고, 서울의 경우 청년 인구의 **64.5%가 1인 가구**로 집계될 만큼 비율이 높다[^2].  
이러한 배경에는 지방에서 서울로 유입되는 대학생, 취업준비생, 사회초년생 등의 증가가 큰 이유이다
2021년 약 3.6만 명이던 서울 청년 순유입 인구는 2022년에는 5.4만 명으로 늘어나는 등 지속적인 청년층 유입이 이루어지고 있으며[^3], 이에 따라 서울 내 **청년 1인 가구의 주거 수요**도 크게 확대되고 있다.

이처럼 사회 구조 및 인구 흐름의 변화로 인해 1인 가구, 특히 **청년층의 주거 문제가 중요한 사회적 과제**로 부상하고 있으며, 이들을 위한 새로운 주거 지원 서비스의 필요성이 대두되고 있습니다.

그러나 청년층의 주거 선택은 현실적으로 여러 어려움에 직면해 있다.  
우선 소득 대비 높은 주거비 부담과 열악한 주거 환경 문제가 심각하다.  
조사에 따르면 서울의 청년 1인 가구 중 **53%가 월세**로 거주하고 있으며, 1인당 주거 면적은 평균 **30.4㎡**에 불과하다[^3].  
더욱이 2022년 기준 서울 청년들은 소득의 **35.4% 가량을 주거비로 지출**하는 것으로 나타나 경제적 부담이 상당하다[^3].  
이러한 통계는 많은 청년들이 제한된 주거 예산 속에서 비좁은 원룸이나 시설이 열악한 거처를 감내하고 있음을 보여준다.

게다가 주거비 상승, 전세 물량 부족 등의 구조적 문제까지 겹치면서 청년층은 적절한 주거지를 선택하기 위해 많은 노력을 기울여야 하며, 잘못된 정보나 숙련 부족으로 인해 **불리한 계약을 맺을 위험**도 존재한다.

한편, 현재 시중의 기존 부동산 앱들은 이러한 고충을 충분히 해소하지 못하는 한계를 보이고 있다.  
직방, 다방 등 대표적인 플랫폼들은 지도를 기반으로 사용자가 **관심 지역을 직접 선택**한 후 해당 지역 내 매물을 검색하는 **지역 선별 → 필터링 방식**을 취하고 있다[^4].  
이 방식은 서울 지리에 익숙하지 않은 청년층이나 초보 이용자에게 **진입 장벽**으로 작용한다.  
즉, 어느 지역이 자신의 예산과 생활 양식에 맞을지 모르는 상태에서 일일이 지도를 보며 추측에 의존해야 하며, **지역 정보를 분산된 채로 수집·비교해야** 한다.

그 결과, **선택 피로도와 정보 격차**가 커지고 검색에 과도한 시간과 노력이 소요되며, 잘못된 선택으로 이어질 위험도 존재한다[^4].

이러한 사회적 맥락에서, 청년층 1인 가구가 **쉽고 효율적으로 자신에게 맞는 거주지를 찾을 수 있도록 돕는 서비스**에 대한 필요성이 점점 커지고 있다.

---

[^1]: [서울시 미디어허브](https://mediahub.seoul.go.kr)
[^2]: [데일리팝, 청년 1인가구 통계](https://dailypop.kr)
[^3]: [동아일보, 서울 청년 주거 실태 관련 보도](https://www.donga.com)
[^4]: 직방·다방 서비스 구조 관련 참고자료 (첨부 문서 `도시낭인_설방_상세기획서.pptx`)

#### 1.2. 개발 목표 및 주요 내용

본 서비스의 개발 목표는,
서울에 거주하는 청년 1인 가구가 제한된 예산 내에서 가장 합리적이고 만족스러운 주거 선택을 할 수 있도록 돕는 것이다.

**핵심 개발 목표**

복잡한 주거 탐색 과정을 간소화하고

개인의 조건에 최적화된 지역과 매물을 추천하며

청년층의 정보 격차, 선택 부담, 주거 만족도 문제를 실질적으로 개선하는 것

 주요 기능 및 구현 방향


| 항목                   | 내용                                                              |
| -------------------- | --------------------------------------------------------------- |
| **1. 개인화 지역 추천 기능**  | 사용자의 출퇴근 위치, 예산, 선호 조건 등을 입력받아 서울시 공공데이터 기반으로 **맞춤형 지역을 자동 추천** |
| **2. 지역별 종합 지표 제공**  | 추천 지역에 대해 임대료, 통근 시간, 치안, 편의시설 밀도 등 **핵심 정보를 종합적으로 제공**         |
| **3. 단계적 탐색 UI**     | ‘지역 추천 → 매물 탐색’의 흐름을 통해 **서울 지리를 몰라도 쉽게 주거지를 좁혀갈 수 있는 UX 설계**   |
| **4. 통근시간 계산 알고리즘**  | 하버사인 거리 + API 시간 보정으로 **현실적인 이동 소요시간 기반 추천 제공**                 |
| **5. 공공데이터 기반 알고리즘** | 주관적 평판이 아닌 **서울시 통계 데이터를 기반으로 한 객관적 추천 알고리즘** 구현                |

---

####  주요 기능 및 구성

1. **개인화 지역 추천 엔진**
   - 사용자는 자신의 조건을 입력:
     - 출퇴근 또는 통학 목적지  
     - 교통수단 (예: 대중교통, 자가용 등)  
     - 최대 통근 시간  
     - 주거 예산  
     - 선호하는 주거 환경 요인 (예: 치안, 조용함, 편의시설 등)
   - 시스템은 **AI 기반 알고리즘**과 **서울시 공공데이터 분석**을 통해  
     해당 조건에 부합하는 **후보 지역 목록**을 도출합니다.

2. **지역별 주거 지표 제공**
   - 추천된 각 지역에 대해 다음 정보를 함께 제공합니다:
     - 평균 임대료
     - 교통 접근성
     - 치안지수
     - 생활편의시설 분포

3. **인터랙티브 지도 기반 탐색**
   - 사용자는 **시각화된 지도를 통해 추천 지역을 한눈에 비교**할 수 있으며  
     관심 지역을 클릭하면, 해당 구역 내 상세 매물 정보를 확인할 수 있습니다.

4. **매물 필터링 및 정렬 기능**
   - 사용자는 원하는 조건(예: 가격, 면적, 유형 등)을 바탕으로 **추가 필터링**이 가능하며  
     지역 추천 결과가 유지된 상태에서 탐색을 이어갈 수 있어  
     **일관성 있는 사용자 경험**을 제공합니다.

#### 1.3. 세부내용

####  사용자 인터페이스 설계

본 서비스의 **사용자 인터페이스(UI)**는 서울에 익숙하지 않은 청년층도 손쉽게 사용할 수 있도록  
**직관적이며 단계적인 설계**를 채택

- 초기 화면에서는 사용자가 주거지 추천에 필요한 정보를 **빠짐없이 입력할 수 있는 안내형 양식**을 제공
  - **출근/등교 위치**: 지도에서 직접 지정하거나 주소 입력 가능
  - **교통수단 및 통근 시간**: 드롭다운 및 슬라이더 형식으로 간편 입력
  - **주거 예산 및 환경 선호**: 체크박스, 우선순위 선택 도구 등 제공

- 이러한 입력 흐름은 논리적인 순서를 따르며, **누락 없이 세부 조건을 설정**할 수 있도록 구성

- 추천 결과는 **지도 기반 대시보드 형태**로 제공되며:
  - 서울시 전체 지도 위에 추천 후보 지역을 색상 또는 마커로 시각화
  - 화면 한쪽에는 지역별 통계(예: 평균 월세, 예상 통근 시간 등)를 **카드 형태**로 표시
  - 특정 지역 클릭 시 상세 정보 및 매물 목록 확인 가능

- 매물 리스트는 썸네일, 가격, 면적, 특징 등의 정보를 포함하며,
  - 매물 선택 시 **상세페이지**로 이동 → 갤러리, 평면도, 지도 위치, 연락처 등 열람 가능

- 전체 UI는 **웹 및 모바일에서 일관되게 사용 가능**하며,
  - **반응형 디자인**을 통해 다양한 기기 환경에서 최적화된 접근성을 제공합니다.

---

#### 🚆 통근 거리 및 시간 산출 기능

**통근 거리/시간 계산**은 서비스의 핵심 기능 중 하나로,  
사용자의 직장 또는 학교까지의 **실제 이동 소요 시간**을 기반으로 추천 결과에 반영됩니다.

- 사용자의 입력 조건에 따라 교통 수단에 맞는 경로 분석을 수행합니다:
  - **대중교통 선택 시**: 지하철 및 버스 환승 포함 최단 소요 시간 산출
  - **자가용 선택 시**: 도로망 및 시간대별 교통 상황을 고려한 경로 계산

- 예: 사용자가 “최대 통근 시간 45분”을 설정하면,
  - 시스템은 서울 내 각 지역이 해당 조건을 충족하는지를 자동 평가합니다.

- 거리 계산은 하버사인 공식(Haversine Formula)을 기반으로 좌표 간 직선거리를 측정하고,
  - 현실적인 이동 시간 보정을 위해 **1.5배 가중치** 적용
  - 이후 상위 3개 매물에 대해 **카카오맵 API** 등을 호출하여 실제 통근 시간 데이터 수집

- 이 과정을 통해 사용자는:
  - 각 지역과 매물이 자신의 통근 조건을 만족하는지 **지도로 직관적으로 파악**할 수 있으며,
  - **별도 앱 없이도 충분한 정보로 판단**할 수 있게 됩니다.

- 해당 기능은 교통 데이터의 **주기적인 자동 업데이트**를 통해 정확성을 유지하며,
  - 향후 “환승 수 적은 경로”, “자전거 도보 포함 여부” 등의 **고급 통근 필터**로 확장 가능하도록 설계되어 있다.

#### 1.4. 기존 서비스 대비 차별성

####  1. 지역 추천 중심 구조

기존 앱:
- 사용자가 먼저 **지도에서 지역을 직접 선택한 후** 매물을 탐색하는 방식

본 서비스:
- **시스템이 먼저 적합한 지역을 추천**하고, 이후 사용자가 매물을 탐색하는 **역방향 구조**

➡ 사용자는 **서울 지리에 대한 배경지식 없이도**  
데이터 기반의 추천을 받아 손쉽게 지역을 좁혀갈 수 있음  
→ **검색 진입 장벽을 크게 낮추는 구조**

---

####  2. 다중 요소 통합 분석

기존 앱:
- 가격, 면적, 위치 등 **단일 기준** 중심의 필터 제공
- 치안, 인프라, 교통 등은 **사용자가 개별 검색**해야 함

본 서비스:
- 치안 통계, 교통 접근성, 생활편의시설 밀도, 젊은 인구 비율 등  
**공공데이터를 종합적으로 분석**
- 알고리즘이 **자동으로 점수화 및 가중 합산하여 종합 추천**

➡️ 사용자는 **풍부한 정보를 기반으로 합리적 의사결정** 가능  
→ 정보 접근성과 분석 자동화에서 차별화

---

####  3. 향상된 사용자 경험 (UX)

기존 앱:
- 여러 지역을 번갈아 검색하며 직접 비교해야 함
- 통근 시간, 주변 환경은 **별도 앱이나 검색**으로 확인

본 서비스:
- 통근 시간 자동 계산, 조건 기반 우선순위 정렬 기능
- **시각화된 지도 UI로 지역 및 매물 정보를 한눈에 비교**

➡️ 사용자는 **단계별 안내 + 자동화된 추천**으로  
탐색 피로도 ↓ 만족도 ↑

---

####  4. 데이터 신뢰성과 개인화 알고리즘

기존 앱:
- 허위 매물 가능성 존재  
- 개인화된 추천 시스템 부재

본 서비스:
- **서울시 공공데이터 기반 객관적 지표** 활용  
- 실제 네이버 부동산에서 검증된 매물 정보만 제공  
- 사용자 선호 데이터 기반 알고리즘 고도화 가능

➡️ 단순한 필터링이 아닌 **정밀한 개인 맞춤 추천** 실현  
→ 서비스 이용률 및 재방문율 증가 가능

---

### 📝 요약

기존의 부동산 앱이 단순히 **매물 목록을 보여주는 도구**였다면,  
본 서비스는 이용자에게 **주거 컨설턴트처럼 조언하는 플랫폼**이다.

> 이용자는 자신의 조건에 맞는 지역과 매물을  
> 마치 전문가와 상담하듯 제안받고 결정할 수 있습니다.  
> → 더 전략적이고, 더 신뢰할 수 있는 주거 선택이 가능.

#### 1.5. 사회적가치 도입 계획

> ####  1. 정보 불균형 해소

- 부동산 시장에서 정보 격차로 인한 피해를 줄이기 위해,  
  본 서비스는 **투명하고 정량적인 정보 제공**에 중점을 둡니다.
  
- 제공 정보 예시:
  - 지역별 평균 임대 시세
  - 주거 환경 지표 (치안, 생활 인프라, 교통 등)
  - 통근 소요 시간

➡️ 이를 통해 청년층 초보 임차인도 **전문가 수준의 의사결정**이 가능하며,  
잘못된 정보에 현혹되거나 불리한 계약을 맺는 위험을 줄입니다.

---

####  2. 정책 참고용 데이터 제공

- 서비스 운영 중 축적되는 **익명화된 사용자 데이터**는  
  청년 주거 정책 수립을 위한 **의미 있는 통계 자료**로 활용

- 예시 활용:
  - 청년의 선호 지역 분포, 가격 민감도, 주거 형태 통계
  - 특정 자치구에 청년 수요 집중 → **임대주택 공급 확대 근거**
  - 치안 선호 패턴 → **치안 강화 필요 지역 도출**

- 계획:
  - 데이터를 분석·가공하여 **정기적인 리포트 형태로 공공기관에 제공**
  - 연구 목적의 데이터 요청 응대 및 공익적 데이터 공유 체계 구축

---

#### 3. 청년 주거지원 정책과의 연계

- 본 플랫폼은 서울시 및 정부가 운영 중인 **청년 주거복지 제도**와 직접 연동 가능성

- 연계 방식:
  - 추천 지역이 '역세권 청년주택', '청년 월세 지원' 대상이면  
    ➤ **매물 상세 페이지에 정책 정보 자동 노출**
  - 서비스 내에 **정책 안내 페이지** 구축:
    - 전·월세 대출 안내
    - 임대주택 신청 절차
    - 복지 조건 확인 기능

- 기대 효과:
  - 정책 대상자(청년층)가 **지원 혜택을 놓치지 않도록 안내**
  - 공공 자원 배분의 **효율성 향상 및 접근성 강화**

---

####  4. 데이터 기반 수익화 방안 (사회적 지속가능성 확보)

서비스의 장기적인 운영 지속성과 사회적 순환 구조 형성을 위해,  
**데이터 기반의 수익 모델**을 병행하여 모색하고 있습니다.

- **① 심층 리포트/자문 서비스**
  - 축적된 데이터를 기반으로 청년 주거 트렌드, 선호 지역 분석 보고서를 제작
  - 부동산 관련 공공기관 및 민간 기업에 유료 자문 제공

- **② 지역 광고 및 생활 제휴**
  - 사용자에게 연계된 **이사, 가구 구매, 생활 업체 광고** 노출
  - 추천 지역 맞춤형 광고를 통해 플랫폼 수익화 (단, 비침습적 UX 유지)

- **③ 알고리즘 및 데이터의 API 판매**
  - 추천 알고리즘 및 매물 데이터 API화를 통해
  - **스타트업, 부동산 중개업체, 지자체** 등에 B2B 솔루션 제공



### 2. 상세설계

#### 2.1. 시스템 구성도

> ![image](https://github.com/user-attachments/assets/ac660007-f03d-4be8-bdab-0f1359de1381)

### 2.2. 사용 기술

| 분류           | 기술 스택                    | 설명                                       |
|----------------|-------------------------------|--------------------------------------------|
| **Frontend**   | React, TypeScript             | 사용자 인터페이스 구성, 입력 및 지도 기반 결과 렌더링 |
| **Backend**    | Spring Boot, Java             | API 처리, 인증/인가, DB 연동 및 AI 서버 통신 담당 |
| **AI Server**  | Flask (Python)                | 사용자 조건 기반 추천 알고리즘 및 점수 계산 수행 |
| **Database**   | MySQL                         | 사용자 정보, 매물 정보, 추천 결과 등 정형 데이터 저장 |
| **Infrastructure** | AWS (EC2, RDS 등)         | 서버/데이터베이스 배포 및 운영 환경 구성 |
| **External API** | Kakao Map API              | 주소 검색, 위치기반 매물 시각화, 통근 시간 계산 등 지도 서비스 활용 |


### 3. 개발결과

#### 3.1. 전체시스템 흐름도

> ![image](https://github.com/user-attachments/assets/c319efee-9a95-4456-8361-7819f0fd558f)

#### 3.2 데이터 명세

ERD

![postgres - public](https://github.com/user-attachments/assets/a24523fa-b59f-452d-b322-37e8f7f0b79c)


https://github.com/2025-PNU-SW-StudyGroup/PNUSW-19/blob/main/%EB%B6%80%EB%8F%99%EC%82%B0_DB_%EB%AA%85%EC%84%B8%EC%84%9C.md

#### 3.2. 기능설명

1. 기능 설명


![image](https://github.com/user-attachments/assets/fd23e2ef-ba60-4572-9115-b061c21f65da)

시작화면

![image](https://github.com/user-attachments/assets/2dbd10ad-0cb6-433f-bd80-643e462f0461)

나이, 성별, 회사 또는 학교 주소, 교통수단, 최대 통근시간, 우선순위, 거래 유형, 보증금 범위, 월세 범위, 방 유형, 층 수, 집 방향, 면적 범위등의 사용자 선호 데이터를 입력받는다.

![image](https://github.com/user-attachments/assets/507e1207-18fe-46e8-86b8-76d1ecfacb48)


선호 지역을 선택한다.
지도와 오른쪽버튼을 통해 검새된 매물 개수와 지역별 추천 점수에 따라 색상으로 추천 정도를 표기한다.
![image](https://github.com/user-attachments/assets/bb1ca445-1e57-4b6a-9642-f42fc3834535)

해당 지역의 추천 매물 리스트를 출력한다.
해당 페이지에서는 매물의 형태, 층수, 면적, 방향, 주소, 우선순위별 점수를 출력한다.
사용자는 정렬 순서를 우선순위 순, 가격 낮은 순, 가격 높은 순, 면적 높은 순으로 설정하여 볼 수 있다.
사용자가 스크롤하여 해당 구역의 더 많은 매물이 있다면 더 조회할 수 있다.
![image](https://github.com/user-attachments/assets/d81ebc14-c65c-4483-9a36-4f7e44d71183)

매물의 상세정보를 조회할 수 있다. 여기에서 매물 유형 정보, 면적 정보, 입주 정보, 위치 정보, 부동산 중개 정보 및 사진등을 확인할 수 있고 상세 정보에서는 플랫폼에서 측정한 우선순위별 점수를 확인할 수 있다.

![image](https://github.com/user-attachments/assets/b8391b30-0dc4-4fc9-8e0e-2ae1f3e7136b)


#### 3.3. 기능명세서

> (https://docs.google.com/spreadsheets/d/1o6vqVKow1pzbJehgar481m9DY8YNma4WdLOtvaq4jtM/edit?gid=0#gid=0)

 🏡 부동산 맞춤형 추천 시스템 설계 및 구현

## 💡 프로젝트 개요  
사용자의 예산, 통근지, 우선순위 등을 기반으로 서울시 내 거주지를 **행정동(dong) 단위로 추천**하고, 선택한 지역 내에서 **개별 매물까지 추천**하는 AI 기반 추천 시스템입니다.

---

## 🔁 추천 흐름 개요

```
사용자 입력
  ↓
/recommend/area
  ↓
추천 동(dong) 리스트 제공
  ↓
/recommend/property
  ↓
해당 동 내 매물 추천
```

---

## 🧭 주요 API 흐름

### 1. `/recommend/area` – 행정동 추천

**입력값 (user_input)**  
- `age`, `gender`: 개인화 보정에 사용  
- `job_location`: 통근 거리 기반 점수 계산  
- `transportation`: 통근 수단에 따라 통근 방식 가중치 분기  
- `budget`: 예산 조건 필터링 (보증금, 월세, 관리비, 구조 등)  
- `priority`: 사용자 우선순위 최대 3개  
- `max_commute_min`: 최대 통근 허용 시간

**추천 로직**
1. 서울시 모든 동(dong)에 대해 아래 6가지 지표 점수 계산:
   - `infra`, `security`, `quiet`, `youth`, `transport`, `commute`
2. 개인화 보정 (나이, 성별 기반)
3. 우선순위 기반 가중합
4. 행정동을 구(gu) 단위로 그룹화하여 추천 리스트 생성

**동 정렬 기준**
1. `total_score` 내림차순
2. `property_count` 내림차순
3. `commute_min` 오름차순

---

### 2. `/recommend/property` – 매물 추천

**입력값**
- `dong`, `dong_code`: 추천받은 행정동 정보
- `property_ids`: 해당 동 내 필터링된 매물 ID 리스트
- `user_input`: 사용자 입력 전체 전달
- `page`, `page_size`: 페이징 처리

**추천 로직**
1. `/recommend/area`에서 받은 매물 ID를 기반으로 매물 상세 정보 조회
2. 각 매물에 대해 6가지 지표 점수 계산
3. 매물 자체 옵션 보정 (가격 대비 효율 등)
4. 총합 점수 계산 및 정렬

**정렬 기준**
- `score` 내림차순

---

## 추천 점수 계산 방식

### 지표별 산정 방식

| 지표 | 계산 방식 |
|------|-----------|
| `infra_score` | 음식점 수 / 면적 → 로그변환 후 정규화 |
| `security_score` | CCTV 밀도 + 구별 범죄율 보정 |
| `transport_score` | 정류장 + 지하철 수 밀도 기반 |
| `quiet_score` | 생활인구 평균 & 표준편차 기반 조용함 지수 |
| `youth_score` | 39세 이하 인구 비율 + 밀도 가중 평균 |
| `commute_score` | `exp(-거리/시간)` 기반 감쇠 함수 |

### 개인화 보정
- 사용자 성별/연령 기반으로 지표에 +0.05~0.1 가중치 조정

### 최종 점수 공식
```
total_score = Σ (지표 점수 × 개인화 계수 × 우선순위 가중치)
```

> 예: priority = ["commute", "infra", "security"] → 가중치 [0.5, 0.3, 0.2]

---

## 기술적 특징

- **거리 기반 감쇠 함수 개선**: `1 / (1 + dist / decay)` sigmoid 방식으로 부드러운 거리 감쇠
- **동 단위 특성 반영**: 매물별 점수는 개별 속성 + 동 단위 평균 점수의 조합으로 가중 평균
- **멀티 스케일 필터링**: 전체 예산 범위 미지정 시 전체 후보 매물 포함
- **페이징 처리**: page/page_size 기반 매물 결과 분할 제공

---

## 대표 사용자 시나리오

> "서울 광진구 직장에 다니는 30세 남성, 자차로 출퇴근하며 원룸을 희망하는 사용자가 월세 80만 원 이하 매물을 찾는 상황"

1. `/recommend/area` 호출로 추천 지역 TOP 5 확인
2. "광장동" 선택 → property_ids 리스트 포함
3. `/recommend/property`에 전달 → 추천 점수 기준 매물 정렬

---

## 업데이트 내역

| 버전 | 주요 변경 사항 |
|------|----------------|
| 1.0.0 | 초기 API 배포 |
| 1.0.1 | API 명세 정리 및 버전 관리 추가 |
| 1.0.2 | priority 항목명 변경 (`safety` → `security`) |
| 1.1.0 | Gunicorn 기반 프로덕션 배포 |
| 1.1.1 | 감쇠 함수 개선 및 점수 보정 방식 고도화 |

---

#### 3.4. 디렉토리 구조

> 프로젝트/
├── app/                          # 백엔드 서버 로직 (FastAPI 기반)
│   ├── db/                       # DB 초기화 및 설정
│   ├── models/                   # 데이터 모델 정의
│   ├── routers/                  # API 라우터 (엔드포인트)
│   ├── services/                 # 비즈니스 로직
│   ├── utils/                    # 유틸리티 함수
│   ├── gunicorn.config.py        # Gunicorn 서버 설정
│   ├── logging_config.py         # 로그 설정
│   └── main.py                   # FastAPI 앱 진입점
│
├── data/                         # 데이터 수집 및 처리 로직
│   ├── property_crawler/         # 부동산 정보 크롤링
│   ├── public_data/              # 공공데이터 처리
│   ├── scoring/                  # 추천 점수 계산 로직
│   ├── db_data_loader.py         # DB 데이터 적재 스크립트
│   ├── dong_parser.py            # 행정동 파서
│   └── origin_data.jsonl         # 원본 예시 데이터
│
├── .gitignore                    # Git 제외 설정 파일
├── README.md                     # 프로젝트 설명 문서

### 4. 설치 및 사용 방법

>본 서비스는 앱 설치 없이 웹 브라우저에서 바로 이용 가능한 형태로 제공됩니다.
특히 모바일에 최적화된 웹 환경으로 제작되어, 스마트폰에서도 앱처럼 편리하게 사용할 수 있습니다.

✅ 바로 접속 링크
👉 https://sulbang.vercel.app/search

🟢 주요 특징
별도 설치나 회원가입 없이 바로 이용 가능

안드로이드 / iOS 모두 대응

네이버 앱, 크롬, 사파리 등 주요 모바일 브라우저 호환

설치 없이 운영 가능하므로 유지보수 및 배포가 유연함

### 5. 소개 및 시연 영상

> 프로젝트 소개 및 시연 영상 YouTube URL을 여기에 삽입하세요.

### 6. 팀 소개

> **팀명**: 도시낭인

| 이름           | 소속 및 학년                                  | 역할                          | 이메일                    |
|----------------|-----------------------------------------------|-------------------------------|---------------------------|
| **김대길 (팀장)** | 정보컴퓨터공학부 4학년                        | Frontend 개발                 | mong3125@pusan.ac.kr      |
| **정의찬**       | 공공정책학부 4학년                            | 서비스 기획 및 운영 전략      | 823920@naver.com          |
| **차지원**       | 의생명융합공학부 데이터사이언스전공 4학년     | Backend 개발                  | jivvon.cha@gmail.com      |
| **신병근**       | 전기컴퓨터공학부 정보컴퓨터공학전공 4학년     | 데이터 분석 및 추천 알고리즘  | byeonggeun.ml@gmail.com   |


### 7. 해커톤 참여 후기

#### 🗣 김대길 (팀장)
> 기획부터 배포까지 모든 과정이 촘촘히 연결되어 있다는 걸 직접 경험할 수 있었고,  
> React를 활용한 모바일 웹 최적화 경험은 제 개발 역량을 한층 끌어올리는 계기가 되었습니다.  
> 협업 과정에서 Git 관리와 커뮤니케이션의 중요성도 크게 느꼈습니다.

#### 🗣 정의찬 (기획)
> 사용자의 주거지 결정에 있어 정보 접근성이 얼마나 중요한지를 다시 실감했습니다.  
> 기획자로서 사용자 흐름을 설계하고, 데이터를 바탕으로 의미 있는 사용자 경험을 만드는 것이 보람 있었습니다.  
> 정책, 기술, 사회적 문제를 연결해보는 의미 있는 시간이었습니다.

#### 🗣 차지원 (백엔드)
> Spring Boot를 기반으로 RESTful API 서버를 설계하고,  
> AI 서버 및 DB와 안정적으로 연동하는 과정을 직접 구현하며 실무 감각을 익혔습니다.  
> 팀원들과의 명확한 역할 분담이 프로젝트의 핵심이었습니다.

#### 🗣 신병근 (AI/데이터)
> 사용자 선호 기반 지역 추천 알고리즘을 직접 설계하면서  
> 데이터가 실제 사용자 선택에 어떻게 영향을 줄 수 있는지 고민하게 되었습니다.  
> Flask 서버를 처음부터 설계한 경험은 매우 값졌고, 공공데이터를 의미 있게 다루는 연습이 되었습니다.
